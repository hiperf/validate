import{_ as i,c as t,o as s,ae as n}from"./chunks/framework.BcVXHrU8.js";const g=JSON.parse('{"title":"minLength","description":"","frontmatter":{},"headers":[],"relativePath":"validators/minLength.md","filePath":"validators/minLength.md"}'),e={name:"validators/minLength.md"};function l(h,a,d,p,r,o){return s(),t("div",null,a[0]||(a[0]=[n(`<h1 id="minlength" tabindex="-1">minLength <a class="header-anchor" href="#minlength" aria-label="Permalink to &quot;minLength&quot;">​</a></h1><p><a name="minLenght"></a></p><h2 id="minlenght-datavalue-validatorconfigvalue-⇒-boolean" tabindex="-1">minLenght(dataValue, validatorConfigValue) ⇒ <code>boolean</code> <a class="header-anchor" href="#minlenght-datavalue-validatorconfigvalue-⇒-boolean" aria-label="Permalink to &quot;minLenght(dataValue, validatorConfigValue) ⇒ &lt;code&gt;boolean&lt;/code&gt;&quot;">​</a></h2><p>Check for min string length</p><p><strong>Kind</strong>: global function</p><table tabindex="0"><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>dataValue</td><td><code>string</code></td><td>input string</td></tr><tr><td>validatorConfigValue</td><td><code>number</code></td><td>min expected value</td></tr></tbody></table><p><strong>Example</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> minLenght </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@hiperf/validate/minLenght&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">minLenght</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;John&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">minLenght</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;John&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span></code></pre></div>`,8)]))}const c=i(e,[["render",l]]);export{g as __pageData,c as default};
